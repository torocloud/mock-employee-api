{
    "comments": "This service is used to initialize the database connection this mock api requires. It currently supports two databases.\n\n1. HSQL\n2. MYSQL\n\nTo select either of the supported database, just set the value of the `database` property in the package properties to `hsql` or `mysql`",
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "fork",
                    "expression": "'database.type'.getPackageProperty().equalsIgnoreCase( 'oracle' )",
                    "children": [
                        {
                            "type": "invokeCode",
                            "label": "true",
                            "className": "io.toro.martini.GloopMethods",
                            "methodName": "setSystemProperty",
                            "parameters": [
                                "java.lang.String",
                                "java.lang.String"
                            ],
                            "inputs": [
                                {
                                    "type": "set",
                                    "expression": "oracle.jdbc.J2EE13Compliant",
                                    "to": [
                                        "name"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "true",
                                    "to": [
                                        "value"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "Check if the database connection pool already exists",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "connectionAlreadyExists",
                                    "type": "boolean",
                                    "allowNull": false
                                },
                                {
                                    "name": "dateType"
                                }
                            ]
                        }
                    ],
                    "className": "io.toro.martini.DatabaseConnectionPoolMethods",
                    "methodName": "containsConnectionWithName",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "mock_employee_api",
                            "to": [
                                "name"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "connectionAlreadyExists"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "'database.type'.getPackageProperty().equalsIgnoreCase( 'mssql' ) ? 'DATETIME' : 'TIMESTAMP'",
                            "evaluate": true,
                            "to": [
                                "dateType"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Does the database connection pool already exists?",
                    "expression": "connectionAlreadyExists",
                    "children": [
                        {
                            "type": "invokeCode",
                            "label": "true",
                            "comments": "If true, just log a message saying so and do nothing",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "info",
                            "parameters": [
                                "java.lang.String"
                            ],
                            "inputs": [
                                {
                                    "type": "set",
                                    "expression": "Database connection pool 'mock_employee_api' already exists.",
                                    "to": [
                                        "message"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "false",
                            "comments": "If false, create a new database a connection pool and ",
                            "children": [
                                {
                                    "comments": "Get the database property from the package properties",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "database"
                                                }
                                            ]
                                        }
                                    ],
                                    "lines": [
                                        {
                                            "type": "set",
                                            "expression": "'database.type'.getPackageProperty( 'hsql' )",
                                            "evaluate": true,
                                            "to": [
                                                "database"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeCode",
                                    "comments": "Create the database connection pool. Depending on the value set on the database property from the package properties, it will create a connection pool for HSQL or MYSQL",
                                    "className": "io.toro.martini.DatabaseConnectionPoolMethods",
                                    "methodName": "savePool",
                                    "parameters": [
                                        "io.toro.gloop.object.property.GloopModel"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "mock_employee_api",
                                            "to": [
                                                "connectionPoolInfo",
                                                "name"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "true",
                                            "to": [
                                                "connectionPoolInfo",
                                                "enabled"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "false",
                                            "to": [
                                                "connectionPoolInfo",
                                                "xa"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "//org.hsqldb.jdbc.JDBCDriver\n\"${database}.driver\".getPackageProperty()",
                                            "evaluate": true,
                                            "to": [
                                                "connectionPoolInfo",
                                                "driverClass"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "//jdbc:hsqldb:file:${toroesb.home}data/hsql/mock_employee_api.db;hsqldb.tx=MVCC;sql.syntax_mys=true\n\"${database}.connection.url\".getPackageProperty()",
                                            "evaluate": true,
                                            "to": [
                                                "connectionPoolInfo",
                                                "url"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "//sa\n\"${database}.username\".getPackageProperty()",
                                            "evaluate": true,
                                            "to": [
                                                "connectionPoolInfo",
                                                "username"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "\"${database}.password\".getPackageProperty()",
                                            "evaluate": true,
                                            "to": [
                                                "connectionPoolInfo",
                                                "password"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeCode",
                                    "comments": "Starts the created database connection pool",
                                    "className": "io.toro.martini.DatabaseConnectionPoolMethods",
                                    "methodName": "startPool",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "mock_employee_api",
                                            "to": [
                                                "name"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "Create the EMPLOYEES table in the database.\n<p> Database Columns:\n    \t\t<li>ID INTEGER IDENTITY PRIMARY KEY,\n    \t\t<li>FIRST_NAME VARCHAR(50) NOT NULL,\n    \t\t<li>LAST_NAME VARCHAR(50) NOT NULL,\n    \t\t<li>EMAIL VARCHAR(50) NOT NULL,\n\t    \t<li>PHONE_NUMBER VARCHAR(50) NOT NULL,\n\t\t<li>JOB_TITLE VARCHAR(50) NOT NULL,\n\t\t<li>JOB_DESCRIPTION VARCHAR(50) NOT NULL,\n\t\t<li>JOB_SALARY DECIMAL(19,4) NOT NULL,\n\t\t<li>EMPLOYMENT_HIRE_DATE DATE,\n\t\t<li>EMPLOYMENT_START_DATE DATE,\n\t\t<li>EMPLOYMENT_END_DATE DATE",
                    "className": "io.toro.martini.SqlMethods",
                    "methodName": "sql",
                    "parameters": [
                        "java.lang.String",
                        "groovy.lang.Closure"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "{\tsql ->\n\tsql.execute \"\"\"\n\t\tCREATE TABLE \"EMPLOYEES\" (\n    \t\t\"ID\" VARCHAR(50) PRIMARY KEY,\n    \t\t\"FIRST_NAME\" VARCHAR(50) NOT NULL,\n    \t\t\"LAST_NAME\" VARCHAR(50) NOT NULL,\n    \t\t\"EMAIL\" VARCHAR(50) NOT NULL,\n\t    \t\"PHONE_NUMBER\" VARCHAR(50) NOT NULL,\n\t\t\t\"JOB_TITLE\" VARCHAR(50) NOT NULL,\n\t\t\t\"JOB_DESCRIPTION\" VARCHAR(50) NOT NULL,\n\t\t\t\"JOB_SALARY\" DECIMAL(19,4) NOT NULL,\n\t\t\t\"EMPLOYMENT_HIRE_DATE\" $dateType,\n\t\t\t\"EMPLOYMENT_START_DATE\" $dateType,\n\t\t\t\"EMPLOYMENT_END_DATE\" $dateType\n\t\t)\n\t\"\"\".toString()\n}",
                            "evaluate": true,
                            "to": [
                                "c"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "mock_employee_api",
                            "to": [
                                "poolName"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "is 'debug.enabled' property set to true?",
                    "expression": "'debug.enabled'.getPackageProperty()",
                    "children": [
                        {
                            "type": "invokeGloop",
                            "label": "true",
                            "comments": "if true, populate the database with sample data",
                            "name": "io.toro.mock.employee.config.PopulateDatabase"
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "Log the exception in the console",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}